

# Standard configuration ormanual configuration of port numbers , this will provide us provision for single instance only.
# server.port=9001

#***************************************************************************************

#Random port number configuration, if we need to start more than one instance of it
server.port=0
spring.application.name=products-service

# By adding 0 enables creating multiple instances, but in the discovery/registry it shows only one client ie recently started.
# It doesnt show the number of instances started invidiually.
# To solve that issue we need to configure below configuration that takes the application name,instance id with random value.
# We can even generate isntance id automatically or even configuring through commandline argument.
# Below case generating automatically. 

eureka.instance.instance-id=${spring.application.name}:${instanceId:${random.value}}

#***************************************************************************************

# By Setting it will start with a random port number, if i start multiple instances random port numbers
# are choosen. Startign multiple instances will enable loadbalancing automatically by gateway to following
# isntances of the services started.

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#eureka.client.fetch-registry=true

#JDBC Connection for h2 database.
spring.datasource.url=jdbc:h2:file:/Users/shyam/Documents/Upgrad/Axon-Services/h2db/db;AUTO_SERVER=true
# This is for providing provision to access multiple databases.
#AUTO_SERVER=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
# Browse the data 
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true


# Bean errror resonse configuration
server.error.include-message=always
# This will tell which bean has failed the validation
server.error.include-binding-errors=always

# This property will enable subscribing of event handlers under a group
axon.eventhandling.processors.product-group.mode=subscribing
# product-group -- subscribing group